openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080/api.tuvarna.geo.com/v1
  description: Generated server url
paths:
  /admin/users/{email}/block/{blocked}:
    put:
      tags:
      - admin-controller
      summary: Block user
      operationId: blockUser
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      - name: blocked
        in: path
        required: true
        schema:
          type: boolean
      responses:
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseVoid'
        "201":
          description: User blocked!
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseVoid'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseVoid'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseVoid'
  /risk/soil:
    post:
      tags:
      - risk-controller
      summary: Retrieve soil type
      operationId: getSoil
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskDTO'
        required: true
      responses:
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseSoil'
        "201":
          description: Soil type retrieved!
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseSoil'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseSoil'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseSoil'
  /risk/earthquake:
    post:
      tags:
      - risk-controller
      summary: Retrieve earthquake
      operationId: getEarthquake
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskDTO'
        required: true
      responses:
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseEarthquake'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseEarthquake'
        "201":
          description: Earthquake retrieved!
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseEarthquake'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseEarthquake'
  /auth/register:
    post:
      tags:
      - auth-controller
      summary: Register a new user
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserDTO'
        required: true
      responses:
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseVoid'
        "201":
          description: User registered successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseVoid'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseVoid'
  /auth/login:
    post:
      tags:
      - auth-controller
      summary: Logging on a new user
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserDTO'
        required: true
      responses:
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseLoggedInUserDTO'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseLoggedInUserDTO'
        "201":
          description: User logged in successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseLoggedInUserDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseLoggedInUserDTO'
  /admin/save/log:
    post:
      tags:
      - admin-controller
      summary: Save log
      operationId: saveLog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggerDTO'
        required: true
      responses:
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseVoid'
        "201":
          description: User blocked!
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseVoid'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseVoid'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseVoid'
  /admin/fetch/logs:
    get:
      tags:
      - admin-controller
      summary: Retrieve user logs
      operationId: getLogs
      responses:
        "400":
          description: Bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseListLoggerDTO'
        "201":
          description: Logs retrieved!
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseListLoggerDTO'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseListLoggerDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestApiResponseListLoggerDTO'
components:
  schemas:
    RestApiResponseVoid:
      type: object
      properties:
        data:
          type: object
        message:
          type: string
        status:
          type: integer
          format: int32
    RiskDTO:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    Coordinate:
      type: object
      properties:
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
        z:
          type: number
          format: double
        valid:
          type: boolean
        coordinate:
          $ref: '#/components/schemas/Coordinate'
        m:
          type: number
          format: double
    CoordinateSequence:
      type: object
      properties:
        measures:
          type: integer
          format: int32
        dimension:
          type: integer
          format: int32
    CoordinateSequenceFactory:
      type: object
    Envelope:
      type: object
      properties:
        "null":
          type: boolean
        width:
          type: number
          format: double
        height:
          type: number
          format: double
        diameter:
          type: number
          format: double
        minX:
          type: number
          format: double
        maxX:
          type: number
          format: double
        maxY:
          type: number
          format: double
        minY:
          type: number
          format: double
        area:
          type: number
          format: double
    Geometry:
      type: object
      properties:
        envelope:
          $ref: '#/components/schemas/Geometry'
        factory:
          $ref: '#/components/schemas/GeometryFactory'
        userData:
          type: object
        length:
          type: number
          format: double
        empty:
          type: boolean
        valid:
          type: boolean
        simple:
          type: boolean
        srid:
          type: integer
          format: int32
        precisionModel:
          $ref: '#/components/schemas/PrecisionModel'
        rectangle:
          type: boolean
        centroid:
          $ref: '#/components/schemas/Point'
        interiorPoint:
          $ref: '#/components/schemas/Point'
        boundaryDimension:
          type: integer
          format: int32
        coordinate:
          $ref: '#/components/schemas/Coordinate'
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/Coordinate'
        geometryType:
          type: string
        boundary:
          $ref: '#/components/schemas/Geometry'
        numGeometries:
          type: integer
          format: int32
        numPoints:
          type: integer
          format: int32
        area:
          type: number
          format: double
        envelopeInternal:
          $ref: '#/components/schemas/Envelope'
        dimension:
          type: integer
          format: int32
    GeometryFactory:
      type: object
      properties:
        precisionModel:
          $ref: '#/components/schemas/PrecisionModel'
        coordinateSequenceFactory:
          $ref: '#/components/schemas/CoordinateSequenceFactory'
        srid:
          type: integer
          format: int32
    MultiPolygon:
      type: object
      properties:
        envelope:
          $ref: '#/components/schemas/Geometry'
        factory:
          $ref: '#/components/schemas/GeometryFactory'
        userData:
          type: object
        boundaryDimension:
          type: integer
          format: int32
        geometryType:
          type: string
        boundary:
          $ref: '#/components/schemas/Geometry'
        dimension:
          type: integer
          format: int32
        length:
          type: number
          format: double
        empty:
          type: boolean
        coordinate:
          $ref: '#/components/schemas/Coordinate'
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/Coordinate'
        numGeometries:
          type: integer
          format: int32
        numPoints:
          type: integer
          format: int32
        area:
          type: number
          format: double
        valid:
          type: boolean
        simple:
          type: boolean
        srid:
          type: integer
          format: int32
        precisionModel:
          $ref: '#/components/schemas/PrecisionModel'
        rectangle:
          type: boolean
        centroid:
          $ref: '#/components/schemas/Point'
        interiorPoint:
          $ref: '#/components/schemas/Point'
        envelopeInternal:
          $ref: '#/components/schemas/Envelope'
    Point:
      type: object
      properties:
        envelope:
          $ref: '#/components/schemas/Geometry'
        factory:
          $ref: '#/components/schemas/GeometryFactory'
        userData:
          type: object
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/Coordinate'
        empty:
          type: boolean
        coordinateSequence:
          $ref: '#/components/schemas/CoordinateSequence'
        simple:
          type: boolean
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
        boundaryDimension:
          type: integer
          format: int32
        coordinate:
          $ref: '#/components/schemas/Coordinate'
        geometryType:
          type: string
        boundary:
          $ref: '#/components/schemas/Geometry'
        numPoints:
          type: integer
          format: int32
        dimension:
          type: integer
          format: int32
        length:
          type: number
          format: double
        valid:
          type: boolean
        srid:
          type: integer
          format: int32
        precisionModel:
          $ref: '#/components/schemas/PrecisionModel'
        rectangle:
          type: boolean
        centroid:
          $ref: '#/components/schemas/Point'
        interiorPoint:
          $ref: '#/components/schemas/Point'
        numGeometries:
          type: integer
          format: int32
        area:
          type: number
          format: double
        envelopeInternal:
          $ref: '#/components/schemas/Envelope'
    PrecisionModel:
      type: object
      properties:
        scale:
          type: number
          format: double
        type:
          $ref: '#/components/schemas/Type'
        floating:
          type: boolean
        maximumSignificantDigits:
          type: integer
          format: int32
        offsetX:
          type: number
          format: double
        offsetY:
          type: number
          format: double
    RestApiResponseSoil:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Soil'
        message:
          type: string
        status:
          type: integer
          format: int32
    Soil:
      type: object
      properties:
        gid:
          type: integer
          format: int32
        snum:
          type: number
          format: float
        faosoil:
          type: string
        domsoi:
          type: string
        phase1:
          type: string
        phase2:
          type: string
        misclu1:
          type: string
        misclu2:
          type: string
        permafrost:
          type: string
        cntcode:
          type: number
          format: double
        cntname:
          type: string
        sqkm:
          type: number
          format: double
        country:
          type: string
        geom:
          $ref: '#/components/schemas/MultiPolygon'
    Type:
      type: object
    Earthquake:
      type: object
      properties:
        id:
          type: integer
          format: int32
        geom:
          $ref: '#/components/schemas/MultiPolygon'
        dn:
          type: integer
          format: int32
    RestApiResponseEarthquake:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Earthquake'
        message:
          type: string
        status:
          type: integer
          format: int32
    RegisterUserDTO:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        isblocked:
          type: boolean
        usertype:
          type: string
    LoginUserDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoggedInUserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        userType:
          type: string
        email:
          type: string
        accessToken:
          type: string
    RestApiResponseLoggedInUserDTO:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LoggedInUserDTO'
        message:
          type: string
        status:
          type: integer
          format: int32
    LoggerDTO:
      type: object
      properties:
        username:
          type: string
        event:
          type: string
        ip:
          type: string
        timestamp:
          type: string
    RestApiResponseListLoggerDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/LoggerDTO'
        message:
          type: string
        status:
          type: integer
          format: int32
